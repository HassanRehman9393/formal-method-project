// Program with array property assertions
// Demonstrating array verifications

// Initialize sorted array
arr[0] := 1;
arr[1] := 2;
arr[2] := 3;
arr[3] := 4;
arr[4] := 5;
n := 5;  // Size of array

// Verify sortedness property
i := 0;
isSorted := 1;  // 1 means true, 0 means false

while (i < n - 1) {
  if (arr[i] > arr[i + 1]) {
    isSorted := 0;  // Not sorted
  }
  i := i + 1;
}

// Check if array is already sorted
assert(isSorted == 1);

// Verify minimum and maximum values
min := arr[0];
max := arr[0];
i := 1;

while (i < n) {
  if (arr[i] < min) {
    min := arr[i];
  }
  if (arr[i] > max) {
    max := arr[i];
  }
  i := i + 1;
}

// Verify min and max are correct
assert(min == 1);
assert(max == 5);

// Verify array bounds
assert(arr[0] >= 0);  // Non-negative
assert(arr[n-1] <= 10);  // Upper bound 