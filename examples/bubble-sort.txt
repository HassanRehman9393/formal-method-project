// Bubble Sort Implementation
// Initialize array with unsorted values
arr[0] := 5;
arr[1] := 3;
arr[2] := 8;
arr[3] := 1;
arr[4] := 2;
n := 5;  // Size of array

// Bubble sort algorithm
i := 0;
while (i < n - 1) {
  j := 0;
  while (j < n - i - 1) {
    // Compare adjacent elements
    if (arr[j] > arr[j + 1]) {
      // Swap elements if they are in wrong order
      temp := arr[j];
      arr[j] := arr[j + 1];
      arr[j + 1] := temp;
    }
    j := j + 1;
  }
  i := i + 1;
}

// Assertions to verify correctness
assert(arr[0] == 1);  // First element should be smallest
assert(arr[1] == 2);
assert(arr[2] == 3);
assert(arr[3] == 5);
assert(arr[4] == 8);  // Last element should be largest

// Assert sortedness property
assert(arr[0] < arr[1]);
assert(arr[1] < arr[2]);
assert(arr[2] < arr[3]);
assert(arr[3] < arr[4]); 