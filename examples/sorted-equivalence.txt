// Simple selection sort implementation
// Should be equivalent to bubble sort when checking final array state

// Initialize array with unsorted values
arr[0] := 5;
arr[1] := 3;
arr[2] := 8;
arr[3] := 1;
arr[4] := 2;
n := 5;  // Size of array

// Selection sort algorithm
i := 0;
while (i < n - 1) {
  // Find minimum element in unsorted part
  minIndex := i;
  j := i + 1;
  
  while (j < n) {
    if (arr[j] < arr[minIndex]) {
      minIndex := j;
    }
    j := j + 1;
  }
  
  // Swap found minimum with first element of unsorted part
  if (minIndex != i) {
    temp := arr[i];
    arr[i] := arr[minIndex];
    arr[minIndex] := temp;
  }
  
  i := i + 1;
} 